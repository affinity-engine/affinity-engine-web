application:
  guides:
    engine:
      usage:
        templates:
          applicationHeader: "The `application` Template"
          applicationIntro: "If you only plan to have a single Affinity Engine running in your project, the simplest solution is to open `my-app/templates/application.hbs` and replace its contents with:"
          applicationExplanation: "Now your Ember project is a pure Affinity Engine. The only thing it will render is your game, and you don't need to worry about any sort of routing."
          advancedRouting: "Some games may benefit from Ember's advanced router. If you want to learn more about how to route between multiple templates, you can consult the Ember guides [here](https://guides.emberjs.com/v2.8.0/routing/). You could then render an unique engine in each route."
          blockComponentsHeader: "Block Components"
          blockComponentsFirstExample: "The Affinity Engine is a block component, which means that you can compose other components and pure html into it. For instance, you could do something like this:"
          blockComponentsSecondExample: "In this case, the paragraph 'Hello world!' will appear inside of the engine. This is particularly useful when you start composing together Affinity Engine modules. For instance, this will render an `affinity-engine-stage` within the engine:"
          blockParams: "You might have noticed that we're passing an `engine` param into the block. This param has several values, all unique to this particular instance of the `affinity-engine`. One of these params is the `engineId`, which you'll learn more about [here](/engine/usage/engine-id). The others help when preloading assets, which you'll learn more about [here](/engine/usage/preloading)."
